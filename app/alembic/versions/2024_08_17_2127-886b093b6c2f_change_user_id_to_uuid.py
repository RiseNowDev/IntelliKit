"""change user id to uuid

Revision ID: 886b093b6c2f
Revises: d8de99f0ddac
Create Date: 2024-08-17 21:27:21.342497

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '886b093b6c2f'
down_revision: Union[str, None] = 'd8de99f0ddac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"')
    op.alter_column('users', 'id', server_default=None)
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE UUID USING (uuid_generate_v4())')
    op.alter_column('users', 'id',
                    type_=postgresql.UUID(),
                    server_default=sa.text('uuid_generate_v4()'),
                    existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id', server_default=None)
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE INTEGER USING (nextval(\'users_id_seq\'))')
    op.alter_column('users', 'id',
                    type_=sa.INTEGER(),
                    server_default=sa.text("nextval('users_id_seq'::regclass)"),
                    existing_nullable=False)
    # ### end Alembic commands ###